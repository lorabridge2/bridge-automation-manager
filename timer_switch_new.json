[
    {
        "description": "Switches binary device on based on a given time window",
        "id": "notgenerated",
        "type": "lb_timer_switch",        
        "inputs": ["4abfbf7b754df373"],
        "outputs": ["4abfbf7b754df373"],
        "input_descriptions": ["binary devices state"],
        "output_descriptions": ["timer state"],        
        "parameters": [        
                {
                    "nametag": "lb_timerswitch_hour_min",
                    "current_value": 0,
                    "node_id": "286e874b07561256",
                    "nodekey": "func"
                },
                {
                    "nametag": "lb_timerswitch_hour_max",
                    "current_value": 0,
                    "node_id": "286e874b07561256",
                    "nodekey": "func"
                },
                {
                    "nametag": "lb_timerswitch_minute_min",
                    "current_value": 0,
                    "node_id": "286e874b07561256",
                    "nodekey": "func"
                },
                {
                    "nametag": "lb_timerswitch_minute_max",
                    "current_value": 0,
                    "node_id": "286e874b07561256",
                    "nodekey": "func"
                }                     
        ]
    },   
    {
        "id": "98ec8db2ee7e0dc2",
        "type": "inject",
        "z": "2041e929a43ea7cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "time",
        "payload": "",
        "payloadType": "date",
        "x": 400,
        "y": 420,
        "wires": [
            [
                "286e874b07561256"
            ]
        ]
    },
    {
        "id": "286e874b07561256",
        "type": "function",
        "z": "2041e929a43ea7cf",
        "name": "Timer switch",
        "func": "let unix_timestamp = msg.payload;\n\nlet set_hour_min = lb_timerswitch_hour_min;\nlet set_minute_min = lb_timerswitch_minute_min;\n\nlet set_hour_max = lb_timerswitch_hour_max;\nlet set_minute_max = lb_timerswitch_minute_max;\n\n\nlet date = new Date(unix_timestamp);\n\nlet current_hour = date.getHours();\nlet current_minute = date.getMinutes();\n\nlet current_in_minutes = current_hour*60 + current_minute;\nlet max_in_minutes = set_hour_max*60 + set_minute_max;\nlet min_in_minutes = set_hour_min*60 + set_minute_max;\n\nvar newMsg = null;\n\nif (current_in_minutes >= min_in_minutes && current_in_minutes <= max_in_minutes) {\n    \n    newMsg = { payload: true};\n}\nelse {\n    \n    newMsg = { payload: false };\n}\n\n\nreturn newMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 420,
        "wires": [
            [
                "4abfbf7b754df373"
            ]
        ]
    },
    {
        "id": "4abfbf7b754df373",
        "type": "function",
        "z": "2041e929a43ea7cf",
        "name": "binary state transition",
        "func": "if (msg.topic == \"binary_state\") {\n    context.set(\"binary_state\", msg.payload);\n    return;\n}\n\nlet old_state = context.get(\"binary_state\");\nlet new_state = msg.payload;\n\nvar newMsg = null;\n\nif (old_state == false && new_state == true) {\n    newMsg = { payload: true };\n}\n\nif (old_state == true && new_state == false) {\n    newMsg = { payload: false };\n}\n\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 420,
        "wires": [
            []
        ]
    }
]